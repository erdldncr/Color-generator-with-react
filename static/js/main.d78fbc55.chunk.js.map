{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","addToClipBoard","console","log","useState","alert","setAlert","bgc","join","hexColor","onClick","setTimeout","className","style","backgroundColor","App","color","setcolor","error","setError","Values","all","list","setList","param","onSubmit","e","preventDefault","colors","type","name","onChange","target","value","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,EAOzBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICoBvDC,EAvBK,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,IAAIC,EAAiC,EAAjCA,OAAOC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,eACrCC,QAAQC,IAAIH,GAD6C,MAEnCI,oBAAS,GAF0B,mBAEnDC,EAFmD,KAE7CC,EAF6C,KAGnDC,EAAI,OAAD,OAAQT,EAAIU,KAAK,KAAjB,KACHC,EAAShB,EAAQ,WAAR,cAAYK,IAQ3B,OAAO,6BAAUY,QAPF,WACbJ,GAAS,GACTL,EAAeQ,GACfE,YAAW,WACTL,GAAS,KACT,MAEgCM,UAAS,gBAAWZ,EAAM,IAAK,eAAiBa,MAAO,CAACC,gBAAgBP,IAC1G,uBAAIK,UAAU,iBACXb,EADH,KAIA,uBAAGa,UAAU,eAAeH,GAC3BJ,GAAQ,oD,gBC2BEU,MA3Cf,WAAgB,IAAD,EACSX,mBAAS,IADlB,mBACPY,EADO,KACDC,EADC,OAESb,oBAAS,GAFlB,mBAEPc,EAFO,KAEDC,EAFC,OAGOf,mBAAS,IAAIgB,IAAO,WAAWC,IAAI,KAH1C,mBAGPC,EAHO,KAGFC,EAHE,KAmBPtB,EAAe,SAACuB,GACpBP,EAASO,IAGX,OAAO,oCACL,6BAASZ,UAAU,aACnB,+CACA,0BAAMa,SAtBW,SAACC,GAClBA,EAAEC,iBACF,IACE,IAAIC,EAAO,IAAIR,IAAOJ,GAAOK,IAAI,IAEjCE,EAAQK,GACRT,GAAS,GACTF,EAAS,IAEX,MAAMC,GACJC,GAAS,GACTjB,QAAQC,IAAIe,GACZD,EAAS,OAWT,2BAAOL,UAAS,UAAKM,EAAO,QAAS,MAAOW,KAAK,OAAOC,KAAK,GAAGC,SAAU,SAACL,GAAKT,EAASS,EAAEM,OAAOC,QAASA,MAAOjB,EAAOkB,YAAY,YACrI,4BAAQL,KAAK,SAASjB,UAAU,OAAhC,YAGF,6BAASA,UAAU,SACjB,+CAEF,6BAASA,UAAU,UAChBU,EAAKa,KAAI,SAACnB,EAAMhB,GACf,OAAQ,kBAAC,EAAD,eAAaC,eAAgBA,EAAgBmC,IAAKpC,GAAYgB,EAA9D,CAAqEhB,MAAOA,WCpC5FqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d78fbc55.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({rgb,weight,index,addToClipBoard}) => {\n  console.log(index)\n  const[alert,setAlert]=useState(false)\n  const bgc=`rgb(${rgb.join(',')})`\n  const hexColor=rgbToHex(...rgb)\n  const copyItem=()=>{\n    setAlert(true)\n    addToClipBoard(hexColor)\n    setTimeout(()=>{\n      setAlert(false)\n    },3000)\n  }\n  return <article  onClick={copyItem} className={`color ${index>10 &&'color-light'}`} style={{backgroundColor:bgc}} >\n    <p  className=\"percent-value\">\n      {weight}%\n    </p>\n   \n    <p className=\"color-value\">{hexColor}</p>\n    {alert&& <p>Copied to ClipBoard</p> }\n\n      </article>\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const[color,setcolor]=useState('')\n  const[error,setError]=useState(false)\n  const[list,setList]=useState(new Values('#ffff10').all(10))\n  const handleSubmit=(e)=>{\n    e.preventDefault()\n    try{\n      let colors=new Values(color).all(10)\n      // console.log('erdal')\n      setList(colors)\n      setError(false)\n      setcolor('')\n    }\n    catch(error){\n      setError(true)\n      console.log(error)\n      setcolor('')\n    }\n  }\n  const addToClipBoard=(param)=>{\n    setcolor(param)\n  }\n  \n  return <>\n    <section className=\"container\">\n    <h3>color generator</h3>\n    <form onSubmit={handleSubmit}>\n      <input className={`${error&&'error'||null}`}type=\"text\" name=\"\" onChange={(e)=>{setcolor(e.target.value)}} value={color} placeholder='#ffff10'/>\n      <button type=\"submit\" className='btn' >Submit</button>\n    </form>\n    </section>\n    <section className=\"color\">\n      <h4>List goes here</h4>\n    </section>\n    <section className=\"colors\">\n      {list.map((color,index)=>{\n        return  <SingleColor addToClipBoard={addToClipBoard} key={index}  {...color} index={index} />\n      })}\n    </section>\n  \n  </>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}